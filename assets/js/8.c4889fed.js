(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{261:function(t,s,n){"use strict";n.r(s);var a=n(32),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"数据"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据"}},[t._v("#")]),t._v(" 数据")]),t._v(" "),n("p",[t._v("数据管理使用详情，参考"),n("a",{attrs:{href:"https://umijs.org/zh-CN/plugins/plugin-model",target:"_blank",rel:"noopener noreferrer"}},[t._v("plugin-model"),n("OutboundLink")],1),t._v("。")]),t._v(" "),n("p",[t._v("核心思路就是利用 "),n("code",[t._v("hooks")]),t._v(" 来做 model，是有别于 "),n("code",[t._v("redux")]),t._v(" 的另一种数据管理手段。")]),t._v(" "),n("p",[t._v("所有的 model 都会放在 "),n("code",[t._v("src/models/")]),t._v(" 下面。")]),t._v(" "),n("p",[t._v("我们依旧以登录页面为例讲解。")]),t._v(" "),n("p",[n("code",[t._v("src/pages/o/login/index.tsx")]),t._v("：")]),t._v(" "),n("div",{staticClass:"language-typescript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-typescript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 业务逻辑被提取到了 src/models/useLoginModel.ts 中")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 本组件只用到了 initBackground")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" initBackground "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("useModel")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'useLoginModel'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("m")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("pick")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'initBackground'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 然后组件挂载后，执行该方法，我们就得到了一个酷炫的背景")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("useEffect")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("initBackground")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("initBackground"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("至于这种新的风格，基于 "),n("code",[t._v("hooks")]),t._v(" 的 model 如何编写？ 那真的简单的一批，就是纯纯的 自定义 "),n("code",[t._v("hooks")]),t._v("。")]),t._v(" "),n("p",[t._v("打开 "),n("code",[t._v("src/models/useLoginModel.ts")]),t._v(" 看看就知道了")])])}),[],!1,null,null,null);s.default=e.exports}}]);