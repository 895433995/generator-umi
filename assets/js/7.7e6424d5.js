(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{264:function(t,e,v){"use strict";v.r(e);var _=v(32),s=Object(_.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"项目介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#项目介绍"}},[t._v("#")]),t._v(" 项目介绍")]),t._v(" "),v("p",[t._v("本脚手架使用了 "),v("a",{attrs:{href:"https://umijs.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("umi@3"),v("OutboundLink")],1),t._v(" + "),v("a",{attrs:{href:"http://www.typescriptlang.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("typescript"),v("OutboundLink")],1),t._v("， 以及 "),v("a",{attrs:{href:"https://ant.design",target:"_blank",rel:"noopener noreferrer"}},[t._v("antd@4"),v("OutboundLink")],1),t._v("。对这三样完全不熟悉的朋友，强烈建议先做了解之后再来。（再见）")]),t._v(" "),v("p",[t._v("接下来，就是介绍脚手架的部分了。首先介绍下项目结构：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",[v("code",[t._v(".\n├── config/\n├── mock/\n├── public/\n├── server/\n├── shells/\n├── src\n│   ├── access.ts\n│   ├── app.ts\n│   └── serve.package.json\n├── Dockerfile\n├── package.json\n├── tsconfig.json\n└──  typings.d.ts\n")])])]),v("h2",{attrs:{id:"项目结构介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#项目结构介绍"}},[t._v("#")]),t._v(" 项目结构介绍")]),t._v(" "),v("h3",{attrs:{id:"dockerfile"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile"}},[t._v("#")]),t._v(" Dockerfile")]),t._v(" "),v("p",[t._v("希望打包成 "),v("code",[t._v("docker")]),t._v(" 镜像时使用。")]),t._v(" "),v("h3",{attrs:{id:"package-json"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#package-json"}},[t._v("#")]),t._v(" package.json")]),t._v(" "),v("p",[t._v("没什么好说的，依赖管理")]),t._v(" "),v("h3",{attrs:{id:"tsconfig-json"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#tsconfig-json"}},[t._v("#")]),t._v(" tsconfig.json")]),t._v(" "),v("p",[t._v("希望使用 "),v("code",[t._v("typescript")]),t._v(" 编码的核心配置文件，勿动（除非你知道自己在干嘛）。")]),t._v(" "),v("h3",{attrs:{id:"typings-d-ts"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#typings-d-ts"}},[t._v("#")]),t._v(" typings.d.ts")]),t._v(" "),v("p",[t._v("希望在 "),v("code",[t._v(".ts")]),t._v("、"),v("code",[t._v(".tsx")]),t._v(" 模块中，引入"),v("code",[t._v(".css")]),t._v("、"),v("code",[t._v(".less")]),t._v("、"),v("code",[t._v(".png")]),t._v("、"),v("code",[t._v(".jpg")]),t._v(" 而不产生语法错误的核心配置文件，勿动（除非你知道自己在干嘛）。")]),t._v(" "),v("h3",{attrs:{id:"config-目录"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#config-目录"}},[t._v("#")]),t._v(" config 目录")]),t._v(" "),v("p",[v("code",[t._v("umi")]),t._v(" 配置文件支持 "),v("code",[t._v("<root>/.umirc.ts")]),t._v(" 或者 "),v("code",[t._v("<root>/config/config.ts")]),t._v(" 二选一（共存时，仅 "),v("code",[t._v(".umitc.ts")]),t._v(" 有效）。")]),t._v(" "),v("p",[t._v("我们脚手架里采用了 "),v("code",[t._v("<root>/config/config.ts")]),t._v(" 形式")]),t._v(" "),v("h3",{attrs:{id:"mock-目录"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#mock-目录"}},[t._v("#")]),t._v(" mock 目录")]),t._v(" "),v("p",[t._v("存储 "),v("code",[t._v("mock")]),t._v(" 文件，此目录下所有 "),v("code",[t._v(".js")]),t._v(" 和 "),v("code",[t._v(".ts")]),t._v(" 文件会被解析为 "),v("code",[t._v("mock")]),t._v(" 文件。")]),t._v(" "),v("h3",{attrs:{id:"public-目录"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#public-目录"}},[t._v("#")]),t._v(" public 目录")]),t._v(" "),v("p",[t._v("此目录下所有文件会被 "),v("code",[t._v("copy")]),t._v(" 到输出路径。")]),t._v(" "),v("h3",{attrs:{id:"server-目录"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#server-目录"}},[t._v("#")]),t._v(" server 目录")]),t._v(" "),v("p",[t._v("脚手架内置的服务启动脚本("),v("code",[t._v("express")]),t._v(" + "),v("code",[t._v("replace-in-file")]),t._v(")，为打包后的内容提供直接启用支持，无需外部再配置 "),v("code",[t._v("nginx")]),t._v(" 或其他 web 容器。")]),t._v(" "),v("p",[t._v("并且在 "),v("code",[t._v("docker")]),t._v(" 镜像方式里，支持容器启动 + 环境变量修改部分配置。（这种方式在一个包，需要不同配置运行在不同环境里非常好用，无需为不同环境打不同的包）。")]),t._v(" "),v("h3",{attrs:{id:"shells-目录"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#shells-目录"}},[t._v("#")]),t._v(" shells 目录")]),t._v(" "),v("p",[t._v("打包、运行脚本。")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("build.sh")]),t._v("：打包（"),v("code",[t._v(".zip")]),t._v("、"),v("code",[t._v("docker")]),t._v("均使用它）")]),t._v(" "),v("li",[v("code",[t._v("git.sh")]),t._v("：本地 "),v("code",[t._v("git")]),t._v(" 环境配置命令集合（配置当前仓库的 用户名、邮箱、"),v("code",[t._v("git")]),t._v(" 别名等）")]),t._v(" "),v("li",[v("code",[t._v("stop.sh")]),t._v("："),v("code",[t._v(".zip")]),t._v(" 包的专用停止服务脚本，")])]),t._v(" "),v("h3",{attrs:{id:"src-目录"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#src-目录"}},[t._v("#")]),t._v(" "),v("code",[t._v("src")]),t._v(" 目录")]),t._v(" "),v("p",[t._v("应用源码，都在这里了。")]),t._v(" "),v("blockquote",[v("p",[v("code",[t._v("serve.package.json")]),t._v(" 切记勿删，这个是打包时的必需品。")])]),t._v(" "),v("p",[t._v("下面介绍应用启动，即，浏览器打开 "),v("code",[t._v("URL")]),t._v(", 回车敲下后，源码的运行大致流程（方便开发者阅读理解，及后续扩展变更）。")]),t._v(" "),v("p",[t._v("程序代码执行路径大致如下：")]),t._v(" "),v("ol",[v("li",[v("code",[t._v("app.ts")]),t._v("：应用数据初始化。脚手架里是根据 "),v("code",[t._v("cookie")]),t._v(" 里是否存有合法 "),v("code",[t._v("token")]),t._v(" 去后端拿用户信息。")]),t._v(" "),v("li",[v("code",[t._v("access.ts")]),t._v("：权限状态映射，输入是上一步里 "),v("code",[t._v("getInitialState")]),t._v(" 的返回值，根据其内容组装应用需要的权限状态，这个我们会在 "),v("RouterLink",{attrs:{to:"/guide/route.html"}},[t._v("权限路由")]),t._v(" 里详细讲解。")],1),t._v(" "),v("li",[v("code",[t._v("layouts/index.ts")]),t._v("，布局入口根据路由地址判断路由形态（OpenPage 还是 AuthRequiredPage），然后交由对应的布局选择器进行页面布局 -> 渲染，这个我们会在 "),v("RouterLink",{attrs:{to:"/guide/layout.html"}},[t._v("布局管理")]),t._v(" 里详细讲解。")],1)]),t._v(" "),v("h2",{attrs:{id:"特性列表"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#特性列表"}},[t._v("#")]),t._v(" 特性列表")]),t._v(" "),v("ul",[v("li",[v("RouterLink",{attrs:{to:"/guide/route.html"}},[t._v("路由")])],1),t._v(" "),v("li",[v("RouterLink",{attrs:{to:"/guide/layout.html"}},[t._v("布局")])],1),t._v(" "),v("li",[v("RouterLink",{attrs:{to:"/guide/locale.html"}},[t._v("国际化")])],1),t._v(" "),v("li",[v("RouterLink",{attrs:{to:"/guide/data.html"}},[t._v("数据")])],1),t._v(" "),v("li",[v("RouterLink",{attrs:{to:"/guide/packaging.html"}},[t._v("打包")])],1)])])}),[],!1,null,null,null);e.default=s.exports}}]);